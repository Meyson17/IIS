openapi: 3.0.3
info:
  title: OpenAPI для приложения автомойки
  contact:
    email: api-support@washer-sakh.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: http://localhost:3000/

tags:
  - name: user
    description: Операции с пользователями
  - name: car
    description: Операции с автомобилями
  - name: order
    description: Операции с заказами
  - name: washer
    description: Операции с мойками
  - name: business
    description: Бизнес-операции

paths:
  # CRUDL для пользователей
  /users:
    get:
      tags:
        - user
      summary: Получить список всех пользователей
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
    post:
      tags:
        - user
      summary: Создать нового пользователя
      requestBody:
        description: Объект нового пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Ошибка при создании пользователя

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - user
      summary: Получить конкретного пользователя
      responses:
        '200':
          description: Пользователь найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден
    put:
      tags:
        - user
      summary: Обновить данные пользователя
      requestBody:
        description: Объект обновленного пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Данные пользователя обновлены
        '404':
          description: Пользователь не найден
    delete:
      tags:
        - user
      summary: Удалить пользователя
      responses:
        '204':
          description: Пользователь успешно удален
        '404':
          description: Пользователь не найден

  # CRUDL для автомобилей
  /cars:
    get:
      tags:
        - car
      summary: Получить список всех автомобилей
      responses:
        '200':
          description: Список автомобилей
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarList'
    post:
      tags:
        - car
      summary: Добавить новый автомобиль
      requestBody:
        description: Объект нового автомобиля
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Автомобиль успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '400':
          description: Ошибка при добавлении автомобиля

  /cars/{carId}:
    parameters:
      - name: carId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - car
      summary: Получить информацию об автомобиле
      responses:
        '200':
          description: Автомобиль найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Автомобиль не найден
    put:
      tags:
        - car
      summary: Обновить данные автомобиля
      requestBody:
        description: Объект обновленного автомобиля
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Данные автомобиля обновлены
        '404':
          description: Автомобиль не найден
    delete:
      tags:
        - car
      summary: Удалить автомобиль
      responses:
        '204':
          description: Автомобиль успешно удален
        '404':
          description: Автомобиль не найден

  # CRUDL для заказов
  /orders:
    get:
      tags:
        - order
      summary: Получить список всех заказов
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
    post:
      tags:
        - order
      summary: Создать новый заказ
      requestBody:
        description: Объект нового заказа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Заказ успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Ошибка при создании заказа

  /orders/{orderId}:
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - order
      summary: Получить информацию о заказе
      responses:
        '200':
          description: Заказ найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Заказ не найден
    put:
      tags:
        - order
      summary: Обновить данные заказа
      requestBody:
        description: Объект обновленного заказа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Данные заказа обновлены
        '404':
          description: Заказ не найден
    delete:
      tags:
        - order
      summary: Удалить заказ
      responses:
        '204':
          description: Заказ успешно удален
        '404':
          description: Заказ не найден

  # CRUDL для моек
  /washers:
    get:
      tags:
        - washer
      summary: Получить список всех моек
      responses:
        '200':
          description: Список моек
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasherList'
    post:
      tags:
        - washer
      summary: Добавить новую мойку
      requestBody:
        description: Объект новой мойки
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Washer'
      responses:
        '201':
          description: Мойка успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Washer'
        '400':
          description: Ошибка при добавлении мойки

  /washers/{washerId}:
    parameters:
      - name: washerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - washer
      summary: Получить информацию о мойке
      responses:
        '200':
          description: Мойка найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Washer'
        '404':
          description: Мойка не найдена
    put:
      tags:
        - washer
      summary: Обновить данные мойки
      requestBody:
        description: Объект обновленной мойки
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Washer'
      responses:
        '200':
          description: Данные мойки обновлены
        '404':
          description: Мойка не найдена
    delete:
      tags:
        - washer
      summary: Удалить мойку
      responses:
        '204':
          description: Мойка успешно удалена
        '404':
          description: Мойка не найдена

  # Бизнес-операции
  /appointments:
    post:
      tags:
        - business
      summary: Клиент записывается на слот
      requestBody:
        description: Объект записи на слот
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  format: int64
                washerId:
                  type: integer
                  format: int64
                date:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Запись на слот успешно создана
        '400':
          description: Ошибка при записи на слот

  /orders/{orderId}/pay:
    post:
      tags:
        - business
      summary: Клиент оплачивает заказ
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Заказ успешно оплачен
        '400':
          description: Ошибка при оплате заказа
        '404':
          description: Заказ не найден

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phone:
          type: string
        gos_number:
          type: string
    UserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Car:
      type: object
      properties:
        id:
          type: integer
          format: int64
        model:
          type: string
        year:
          type: integer
    CarList:
      type: object
      properties:
        cars:
          type: array
          items:
            $ref: '#/components/schemas/Car'
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        client_id:
          type: integer
          format: int64
        washer_id:
          type: integer
          format: int64
        service_id:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        date_time:
          type: string
          format: date-time
        paid:
          type: boolean
        complete:
          type: boolean
    OrderList:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    Washer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        longitude:
          type: number
        latitude:
          type: number
        address:
          type: string
    WasherList:
      type: object
      properties:
        washers:
          type: array
          items:
            $ref: '#/components/schemas/Washer'
